import * as ts from "typescript";
import * as syntax from "./syntax";
import * as websitegenerator from "./websitegenerator";
export = Main;
declare module Main {
    /**
     * Input for the generator to process.
     */
    interface GeneratorInput {
        /**
         * The TypeScript source to parse.
         */
        sourceText: string;
        /**
         * The name of the source file corresponding to the data.
         */
        sourceFileName: string;
    }
    /**
     * Options used for controlling how documentation generation happens.
     */
    interface GeneratorOptions {
        /**
         * Compiler options used to compiler the files.
         */
        compilerOptions?: ts.CompilerOptions;
        /**
         * The folder in which the files for the website of API documentation
         * should be generated.
         */
        websiteOptions?: WebsiteOptions;
        /**
         * Callback to execute in dev mode when an unexpected situation is encountered.
         */
        devMode?: (node: ts.Node) => void;
    }
    /**
     * Options for generating the website.
     */
    type WebsiteOptions = websitegenerator.Options;
    /**
     * Generates documentation for APIs present in the specified files.
     *
     * @param fileNames The list of files.
     * @param options The options used to generate documentation.
     * @returns The list of documentation elements.
     */
    function generate(fileNames: string[], options?: GeneratorOptions): syntax.Element[];
    function flattenModules(elements: syntax.Element[]): syntax.ModuleDeclaration[];
}
