{"version":3,"sources":["../../src/api/BlockchainRoutesApi.js"],"names":["BlockchainRoutesApi","apiClient","ApiClient","instance","height","postBody","undefined","Error","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","BlockInfoDTO","callApi","getBlockByHeightWithHttpInfo","then","response_and_data","data","opts","Object","getBlockTransactionsWithHttpInfo","HeightDTO","getBlockchainHeightWithHttpInfo","BlockchainScoreDTO","getBlockchainScoreWithHttpInfo","limit","getBlocksByHeightWithLimitWithHttpInfo","BlockchainStorageInfoDTO","getDiagnosticStorageWithHttpInfo"],"mappings":"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","file":"BlockchainRoutesApi.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * NIS2 API\n * This document defines all the nis2 api routes and behaviour\n *\n * OpenAPI spec version: 1.0.0\n * Contact: guillemchain@gmail.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from \"../ApiClient\";\nimport BlockInfoDTO from '../model/BlockInfoDTO';\nimport BlockchainScoreDTO from '../model/BlockchainScoreDTO';\nimport BlockchainStorageInfoDTO from '../model/BlockchainStorageInfoDTO';\nimport HeightDTO from '../model/HeightDTO';\n\n/**\n * BlockchainRoutes service.\n * @module api/BlockchainRoutesApi\n * @version 1.0.0\n */\nexport default class BlockchainRoutesApi {\n\n\t/**\n\t * Constructs a new BlockchainRoutesApi.\n\t * @alias module:api/BlockchainRoutesApi\n\t * @class\n\t * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n\t * default to {@link module:ApiClient#instance} if unspecified.\n\t */\n\tconstructor(apiClient) {\n\t\tthis.apiClient = apiClient || ApiClient.instance;\n\t}\n\n\n\t/**\n\t * Get block information\n\t * Returns block information for a given block height\n\t * @param {Number} height Block height\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BlockInfoDTO} and HTTP response\n\t */\n\tgetBlockByHeightWithHttpInfo(height) {\n\t\tlet postBody = null;\n\n\t\t// verify the required parameter 'height' is set\n\t\tif (height === undefined || height === null) {\n\t\t\tthrow new Error(\"Missing the required parameter 'height' when calling getBlockByHeight\");\n\t\t}\n\n\n\t\tlet pathParams = {\n\t\t\t'height': height\n\t\t};\n\t\tlet queryParams = {};\n\t\tlet headerParams = {};\n\t\tlet formParams = {};\n\n\t\tlet authNames = [];\n\t\tlet contentTypes = [];\n\t\tlet accepts = ['application/json'];\n\t\tlet returnType = BlockInfoDTO;\n\n\t\treturn this.apiClient.callApi(\n\t\t\t'/block/{height}', 'GET',\n\t\t\tpathParams, queryParams, headerParams, formParams, postBody,\n\t\t\tauthNames, contentTypes, accepts, returnType\n\t\t);\n\t}\n\n\t/**\n\t * Get block information\n\t * Returns block information for a given block height\n\t * @param {Number} height Block height\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BlockInfoDTO}\n\t */\n\tgetBlockByHeight(height) {\n\t\treturn this.getBlockByHeightWithHttpInfo(height)\n\t\t\t.then(function(response_and_data) {\n\t\t\t\treturn response_and_data.data;\n\t\t\t});\n\t}\n\n\n\t/**\n\t * Get transactions from a block information\n\t * Returns all transactions information for a given block height\n\t * @param {Number} height Block height\n\t * @param {Object} opts Optional parameters\n\t * @param {Number} opts.pageSize The numbers of transactions to return\n\t * @param {String} opts.id Id last transaction id to apply pagination\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<Object>} and HTTP response\n\t */\n\tgetBlockTransactionsWithHttpInfo(height, opts) {\n\t\topts = opts || {};\n\t\tlet postBody = null;\n\n\t\t// verify the required parameter 'height' is set\n\t\tif (height === undefined || height === null) {\n\t\t\tthrow new Error(\"Missing the required parameter 'height' when calling getBlockTransactions\");\n\t\t}\n\n\n\t\tlet pathParams = {\n\t\t\t'height': height\n\t\t};\n\t\tlet queryParams = {\n\t\t\t'pageSize': opts['pageSize'],\n\t\t\t'id': opts['id']\n\t\t};\n\t\tlet headerParams = {};\n\t\tlet formParams = {};\n\n\t\tlet authNames = [];\n\t\tlet contentTypes = [];\n\t\tlet accepts = ['application/json'];\n\t\tlet returnType = [Object];\n\n\t\treturn this.apiClient.callApi(\n\t\t\t'/block/{height}/transactions', 'GET',\n\t\t\tpathParams, queryParams, headerParams, formParams, postBody,\n\t\t\tauthNames, contentTypes, accepts, returnType\n\t\t);\n\t}\n\n\t/**\n\t * Get transactions from a block information\n\t * Returns all transactions information for a given block height\n\t * @param {Number} height Block height\n\t * @param {Object} opts Optional parameters\n\t * @param {Number} opts.pageSize The numbers of transactions to return\n\t * @param {String} opts.id Id last transaction id to apply pagination\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<Object>}\n\t */\n\tgetBlockTransactions(height, opts) {\n\t\treturn this.getBlockTransactionsWithHttpInfo(height, opts)\n\t\t\t.then(function(response_and_data) {\n\t\t\t\treturn response_and_data.data;\n\t\t\t});\n\t}\n\n\n\t/**\n\t * Get the current height of the chain\n\t * Returns the current height of the blockchain\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/HeightDTO} and HTTP response\n\t */\n\tgetBlockchainHeightWithHttpInfo() {\n\t\tlet postBody = null;\n\n\n\t\tlet pathParams = {};\n\t\tlet queryParams = {};\n\t\tlet headerParams = {};\n\t\tlet formParams = {};\n\n\t\tlet authNames = [];\n\t\tlet contentTypes = [];\n\t\tlet accepts = ['application/json'];\n\t\tlet returnType = HeightDTO;\n\n\t\treturn this.apiClient.callApi(\n\t\t\t'/chain/height', 'GET',\n\t\t\tpathParams, queryParams, headerParams, formParams, postBody,\n\t\t\tauthNames, contentTypes, accepts, returnType\n\t\t);\n\t}\n\n\t/**\n\t * Get the current height of the chain\n\t * Returns the current height of the blockchain\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/HeightDTO}\n\t */\n\tgetBlockchainHeight() {\n\t\treturn this.getBlockchainHeightWithHttpInfo()\n\t\t\t.then(function(response_and_data) {\n\t\t\t\treturn response_and_data.data;\n\t\t\t});\n\t}\n\n\n\t/**\n\t * Get the current score of the chain\n\t * Returns the current chain score\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BlockchainScoreDTO} and HTTP response\n\t */\n\tgetBlockchainScoreWithHttpInfo() {\n\t\tlet postBody = null;\n\n\n\t\tlet pathParams = {};\n\t\tlet queryParams = {};\n\t\tlet headerParams = {};\n\t\tlet formParams = {};\n\n\t\tlet authNames = [];\n\t\tlet contentTypes = [];\n\t\tlet accepts = ['application/json'];\n\t\tlet returnType = BlockchainScoreDTO;\n\n\t\treturn this.apiClient.callApi(\n\t\t\t'/chain/score', 'GET',\n\t\t\tpathParams, queryParams, headerParams, formParams, postBody,\n\t\t\tauthNames, contentTypes, accepts, returnType\n\t\t);\n\t}\n\n\t/**\n\t * Get the current score of the chain\n\t * Returns the current chain score\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BlockchainScoreDTO}\n\t */\n\tgetBlockchainScore() {\n\t\treturn this.getBlockchainScoreWithHttpInfo()\n\t\t\t.then(function(response_and_data) {\n\t\t\t\treturn response_and_data.data;\n\t\t\t});\n\t}\n\n\n\t/**\n\t * Get blocks information\n\t * Returns blocks information for a given block height and limit\n\t * @param {Number} height The block height at which information should be returned\n\t * @param {Number} limit Block limit\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/BlockInfoDTO>} and HTTP response\n\t */\n\tgetBlocksByHeightWithLimitWithHttpInfo(height, limit) {\n\t\tlet postBody = null;\n\n\t\t// verify the required parameter 'height' is set\n\t\tif (height === undefined || height === null) {\n\t\t\tthrow new Error(\"Missing the required parameter 'height' when calling getBlocksByHeightWithLimit\");\n\t\t}\n\n\t\t// verify the required parameter 'limit' is set\n\t\tif (limit === undefined || limit === null) {\n\t\t\tthrow new Error(\"Missing the required parameter 'limit' when calling getBlocksByHeightWithLimit\");\n\t\t}\n\n\n\t\tlet pathParams = {\n\t\t\t'height': height,\n\t\t\t'limit': limit\n\t\t};\n\t\tlet queryParams = {};\n\t\tlet headerParams = {};\n\t\tlet formParams = {};\n\n\t\tlet authNames = [];\n\t\tlet contentTypes = [];\n\t\tlet accepts = ['application/json'];\n\t\tlet returnType = [BlockInfoDTO];\n\n\t\treturn this.apiClient.callApi(\n\t\t\t'/blocks/{height}/limit/{limit}', 'GET',\n\t\t\tpathParams, queryParams, headerParams, formParams, postBody,\n\t\t\tauthNames, contentTypes, accepts, returnType\n\t\t);\n\t}\n\n\t/**\n\t * Get blocks information\n\t * Returns blocks information for a given block height and limit\n\t * @param {Number} height The block height at which information should be returned\n\t * @param {Number} limit Block limit\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/BlockInfoDTO>}\n\t */\n\tgetBlocksByHeightWithLimit(height, limit) {\n\t\treturn this.getBlocksByHeightWithLimitWithHttpInfo(height, limit)\n\t\t\t.then(function(response_and_data) {\n\t\t\t\treturn response_and_data.data;\n\t\t\t});\n\t}\n\n\n\t/**\n\t * Get the storage information\n\t * Returns statistical information about the blockchain\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BlockchainStorageInfoDTO} and HTTP response\n\t */\n\tgetDiagnosticStorageWithHttpInfo() {\n\t\tlet postBody = null;\n\n\n\t\tlet pathParams = {};\n\t\tlet queryParams = {};\n\t\tlet headerParams = {};\n\t\tlet formParams = {};\n\n\t\tlet authNames = [];\n\t\tlet contentTypes = [];\n\t\tlet accepts = ['application/json'];\n\t\tlet returnType = BlockchainStorageInfoDTO;\n\n\t\treturn this.apiClient.callApi(\n\t\t\t'/diagnostic/storage', 'GET',\n\t\t\tpathParams, queryParams, headerParams, formParams, postBody,\n\t\t\tauthNames, contentTypes, accepts, returnType\n\t\t);\n\t}\n\n\t/**\n\t * Get the storage information\n\t * Returns statistical information about the blockchain\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BlockchainStorageInfoDTO}\n\t */\n\tgetDiagnosticStorage() {\n\t\treturn this.getDiagnosticStorageWithHttpInfo()\n\t\t\t.then(function(response_and_data) {\n\t\t\t\treturn response_and_data.data;\n\t\t\t});\n\t}\n\n\n}\n"]}