{"version":3,"sources":["../../src/transactions/NamespaceMosaicId.js"],"names":["mosaicId","namespaceId","subnamespaceParentId","subnamespaceNamespaceId","namespaceName","mosaicName","IdGenerator","generateMosaicId","path","generateNamespacePath","length","parentNamespaceName"],"mappings":";;;;;QAkBgBA,Q,GAAAA,Q;QAIAC,W,GAAAA,W;QAKAC,oB,GAAAA,oB;QAKAC,uB,GAAAA,uB;;AAhBhB;;;;;;AAEO,SAASH,QAAT,CAAkBI,aAAlB,EAAiCC,UAAjC,EAA6C;AACnD,SAAOC,sBAAYC,gBAAZ,CAAgCH,aAAhC,SAAiDC,UAAjD,CAAP;AACA,C,CApBD;;;;;;;;;;;;;;;;AAsBO,SAASJ,WAAT,CAAqBG,aAArB,EAAoC;AAC1C,MAAMI,OAAOF,sBAAYG,qBAAZ,CAAkCL,aAAlC,CAAb;AACA,SAAOI,KAAKE,MAAL,GAAcJ,sBAAYG,qBAAZ,CAAkCL,aAAlC,EAAiDI,KAAKE,MAAL,GAAc,CAA/D,CAAd,GAAkF,EAAzF;AACA;;AAEM,SAASR,oBAAT,CAA8BS,mBAA9B,EAAmDP,aAAnD,EAAkE;AACxE,MAAMI,OAAOF,sBAAYG,qBAAZ,CAAqCE,mBAArC,SAA4DP,aAA5D,CAAb;AACA,SAAOE,sBAAYG,qBAAZ,CAAkCE,mBAAlC,EAAuDH,KAAKE,MAAL,GAAc,CAArE,CAAP;AACA;;AAEM,SAASP,uBAAT,CAAiCQ,mBAAjC,EAAsDP,aAAtD,EAAqE;AAC3E,MAAMI,OAAOF,sBAAYG,qBAAZ,CAAqCE,mBAArC,SAA4DP,aAA5D,CAAb;AACA,SAAOI,KAAKA,KAAKE,MAAL,GAAc,CAAnB,CAAP;AACA","file":"NamespaceMosaicId.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport IdGenerator from '../coders/idGenerator';\n\nexport function mosaicId(namespaceName, mosaicName) {\n\treturn IdGenerator.generateMosaicId(`${namespaceName}:${mosaicName}`);\n}\n\nexport function namespaceId(namespaceName) {\n\tconst path = IdGenerator.generateNamespacePath(namespaceName);\n\treturn path.length ? IdGenerator.generateNamespacePath(namespaceName)[path.length - 1] : [];\n}\n\nexport function subnamespaceParentId(parentNamespaceName, namespaceName) {\n\tconst path = IdGenerator.generateNamespacePath(`${parentNamespaceName}.${namespaceName}`);\n\treturn IdGenerator.generateNamespacePath(parentNamespaceName)[path.length - 2];\n}\n\nexport function subnamespaceNamespaceId(parentNamespaceName, namespaceName) {\n\tconst path = IdGenerator.generateNamespacePath(`${parentNamespaceName}.${namespaceName}`);\n\treturn path[path.length - 1];\n}\n\n"]}